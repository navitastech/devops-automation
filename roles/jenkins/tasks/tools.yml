---
- name: Create Maven installation directory
  file:
    state=directory
    owner={{jenkins_user}}
    group={{jenkins_group}}
    mode=0755
    dest={{maven_install_dir}}/maven

- name: Download Maven Distrubution
  get_url: url="{{maven_mirror}}/{{maven_filename}}" dest="{{staging_dir}}/{{maven_filename}}"

- name: Install Maven tar file
  unarchive:
    src={{staging_dir}}/{{maven_filename}}
    dest={{maven_install_dir}}
    copy=false
    mode=0744

- name: Update Maven Directory permissions
  file: dest={{maven_install_dir}}/apache-maven-{{maven_version}}  owner={{jenkins_user}}  group={{jenkins_group}} mode=755 state=directory recurse=yes

- name: Set  Maven binary Path
  become: yes
  file:
    state=link
    force=true
    src={{maven_install_dir}}/apache-maven-{{maven_version}}/bin/mvn
    dest={{maven_bin_path}}/mvn

- name: Create Maven m2 repository directory
  file:
    state=directory
    owner={{jenkins_user}}
    group={{jenkins_group}}
    mode=0755
    dest=/home/{{jenkins_user}}/.m2

- name: clean maven files
  file : path={{staging_dir}}/{{maven_filename}} state=absent

- name: Create gradle installation directory
  file:
    state=directory
    owner={{jenkins_user}}
    group={{jenkins_group}}
    mode=0755
    dest={{gradle_install_dir}}/gradle

- name: Download gradle Distrubution
  get_url: url="{{gradle_mirror}}/{{gradle_filename}}" dest="{{staging_dir}}/{{gradle_filename}}"


- name: clean previous installation
  file:
    path: "{{gradle_install_dir}}/gradle-{{gradle_version}}"
    state: absent

- name: Install gradle tar file
  tags: gradle
  unarchive:
    src={{staging_dir}}/{{gradle_filename}}
    dest={{gradle_install_dir}}
    copy=false
    mode=0744

- name: Update gradle Directory permissions
  tags: gradle
  file: dest={{gradle_install_dir}}/gradle-{{gradle_version}}  owner={{jenkins_user}}  group={{jenkins_group}} mode=755 state=directory recurse=yes

- name: Set  gradle binary Path
  tags: gradle
  become: yes
  file:
    state=link
    force=true
    src={{gradle_install_dir}}/gradle-{{gradle_version}}/bin/gradle
    dest={{gradle_bin_path}}/gradle

- name: clean gradle files
  file : path={{staging_dir}}/{{gradle_filename}} state=absent

- name: Download Terraform
  get_url: url="https://releases.hashicorp.com/terraform/{{ terraform_version }}/terraform_{{ terraform_version }}_linux_amd64.zip"
          dest="{{staging_dir}}/terraform_{{ terraform_version }}_linux_amd64.zip"

- name: Extract and install Terraform
  unarchive: src="{{staging_dir}}/terraform_{{ terraform_version }}_linux_amd64.zip"
             dest=/usr/local/bin
             copy=no


- name: Ensure old versions of Docker are not installed.
  package:
    name:
      - docker
      - docker-common
      - docker-engine
    state: absent

- name: Add Docker GPG key.
  rpm_key:
    key: https://download.docker.com/linux/centos/gpg
    state: present

- name: Add Docker repository.
  get_url:
    url: "{{ docker_yum_repo_url }}"
    dest: '/etc/yum.repos.d/docker-{{ docker_edition }}.repo'
    owner: root
    group: root
    mode: 0644

- name: Configure Docker Edge repo.
  ini_file:
    dest: '/etc/yum.repos.d/docker-{{ docker_edition }}.repo'
    section: 'docker-{{ docker_edition }}-edge'
    option: enabled
    value: '{{ docker_yum_repo_enable_edge }}'



- name: Ensure containerd service dir exists.
  file:
    path: /etc/systemd/system/containerd.service.d
    state: directory

- name: Add shim to ensure Docker can start in all environments.
  template:
    src: override.conf.j2
    dest: /etc/systemd/system/containerd.service.d/override.conf
  register: override_template

- name: Reload systemd daemon if template is changed.
  systemd:
    daemon_reload: true
  when: override_template is changed

  
- name: Install Docker.
  package:
    name: "{{ docker_package }}"
    state: "{{ docker_package_state }}"
  notify: restart docker



- name: Check current docker-compose version.
  command: docker-compose --version
  register: docker_compose_current_version
  changed_when: false
  failed_when: false

- name: Delete existing docker-compose version if it's different.
  file:
    path: "{{ docker_compose_path }}"
    state: absent
  when: >
    docker_compose_current_version.stdout is defined
    and docker_compose_version not in docker_compose_current_version.stdout

- name: Install Docker Compose (if configured).
  get_url:
    url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64
    dest: "{{ docker_compose_path }}"
    mode: 0755

- name: Ensure docker users are added to the docker group.
  user:
    name: "{{ item }}"
    groups: docker
    append: true
  with_items: "{{ docker_users }}"